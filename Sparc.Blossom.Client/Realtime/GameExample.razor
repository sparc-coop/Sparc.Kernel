@namespace Sparc.Blossom.Realtime

<div class="features-wrapper-2">
    <div id="w-node-a585b237-ffa5-80f2-513f-6abe89ea6f85-93a1e0f4" class="text-child _2 js-banner-blue js-animate-title">
        <h3 class="features-h js-split-title" style="">
            <div class="js-title" style="display: block; text-align: start; position: relative; opacity: 1; visibility: inherit; transform-origin: 50% 50%; transform: translate3d(0px, 0px, 0px); transform-style: preserve-3d; perspective: 1000px;">
                Maintain and
            </div>
            <div class="js-title" style="display: block; text-align: start; position: relative; opacity: 1; visibility: inherit; transform-origin: 50% 50%; transform: translate3d(0px, 0px, 0px); transform-style: preserve-3d; perspective: 1000px;">
                <span class="world">scale</span>
            </div>
        </h3>
        <p class="p-leading js-p-split" style="">
            <div class="p-line" style="display: block; text-align: start; position: relative; transform: translate(0px, 0px); opacity: 1;">
                In times of great pressure and deadlines that can kill —
            </div>
            <div class="p-line" style="display: block; text-align: start; position: relative; transform: translate(0px, 0px); opacity: 1;">
                you'll be fully equipped to maintain, update and scale a
            </div>
            <div class="p-line" style="display: block; text-align: start; position: relative; transform: translate(0px, 0px); opacity: 1;">
                product or website. Every god d*mn project that the
            </div>
            <div class="p-line" style="display: block; text-align: start; position: relative; transform: translate(0px, 0px); opacity: 1;">
                client decides to “revise” or scale from 1 to humongous
            </div>
            <div class="p-line" style="display: block; text-align: start; position: relative; transform: translate(0px, 0px); opacity: 1;">
                will be a child's play to you. This is what design system
            </div>
            <div class="p-line" style="display: block; text-align: start; position: relative; transform: translate(0px, 0px); opacity: 1;">
                are for. Use them right.
            </div>
        </p>
    </div>
    <div id="w-node-a585b237-ffa5-80f2-513f-6abe89ea6f8c-93a1e0f4" class="w-embed w-script matter-parent">
        <div class="matter-rect-circ">
        </div>
    </div>
</div>

<style>
    .features-wrapper-2 {
        grid-row-gap: 0;
        position: relative;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        padding-right: 2em;
        padding-left: 2em;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-align: center;
        -webkit-align-items: center;
        -ms-flex-align: center;
        align-items: center;
        grid-row-gap: 4em
    }

    .js-banner-blue {
        height: max-content;
    }

    .text-child {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        width: 50%;
        padding: 7em 5.3em;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
        grid-row-gap: 2em;
        border-radius: 3.5em
    }

    .text-child._2 {
        width: 100%;
        max-width: 730px;
        background-color: #2172ff
    }

    .text-child._2.js-banner-blue {
        min-width: auto
    }

    h3 {
        margin-top: 0;
        margin-bottom: .2em;
        font-size: 3.5em;
        line-height: 1;
        font-family: Arial, sans-serif;
        font-weight: 500;
        color: white;
    }

    .p-line {
        font-family: Arial, sans-serif;
        color: white;
    }

    .matter-parent {
        width: 1165px;
        height: 628px;
    }

    .matter-rect-circ {
        width: 100%;
        height: 100%;
        background: transparent;
        cursor: pointer;
    }

    .matter-canvas {
        display: inline-block;
        width: 100%;
        height: 100%;
        background:  0% 0% / contain transparent;
    }

    .w-embed:after, .w-embed:before {
        content: " ";
        display: table;
        grid-column-start: 1;
        grid-row-start: 1;
        grid-column-end: 2;
        grid-row-end: 2
    }

    .w-embed:after {
        clear: both
    }

    #w-node-a585b237-ffa5-80f2-513f-6abe89ea6f7c-93a1e0f4, #w-node-a585b237-ffa5-80f2-513f-6abe89ea6f8c-93a1e0f4, #w-node-a585b237-ffa5-80f2-513f-6abe89ea6f8e-93a1e0f4 {
        -ms-grid-column: span 1;
        grid-column-start: span 1;
        -ms-grid-column-span: 1;
        grid-column-end: span 1;
        -ms-grid-row: span 1;
        grid-row-start: span 1;
        -ms-grid-row-span: 1;
        grid-row-end: span 1
    }
</style>

@inject IJSRuntime JSRuntime

@code {
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        await JSRuntime.InvokeVoidAsync("canvasInterop.setupCanvas");
    //    }
    //}
} 